version: '3.8'

services:
  # API Gateway
  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - auth-service
      - chat-service
      - fortune-service
      - ecommerce-api-service
      - payment-service
      - invite-service
      - key-service
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
    networks:
      - baidaohui-network

  # 认证服务
  auth-service:
    image: yourregistry/baidaohui-auth-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=${REDIS_URL}
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
      replicas: 2
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 聊天服务
  chat-service:
    image: yourregistry/baidaohui-chat-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - R2_ENDPOINT=${R2_ENDPOINT}
      - R2_ACCESS_KEY=${R2_ACCESS_KEY}
      - R2_SECRET_KEY=${R2_SECRET_KEY}
      - R2_BUCKET=${R2_BUCKET}
    deploy:
      placement:
        constraints:
          - node.labels.location == buffalo
      replicas: 2
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 算命服务
  fortune-service:
    image: yourregistry/baidaohui-fortune-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - R2_ENDPOINT=${R2_ENDPOINT}
      - R2_ACCESS_KEY=${R2_ACCESS_KEY}
      - R2_SECRET_KEY=${R2_SECRET_KEY}
      - R2_BUCKET=${R2_BUCKET}
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
      - EMAIL_SERVICE_URL=${EMAIL_SERVICE_URL}
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
      replicas: 2
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 电商轮询服务
  ecommerce-poller:
    image: yourregistry/baidaohui-ecommerce-poller:latest
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - R2_ENDPOINT=${R2_ENDPOINT}
      - R2_ACCESS_KEY=${R2_ACCESS_KEY}
      - R2_SECRET_KEY=${R2_SECRET_KEY}
      - R2_BUCKET=${R2_BUCKET}
      - STRIPE_ACCOUNTS=${STRIPE_ACCOUNTS}
    deploy:
      placement:
        constraints:
          - node.labels.location == buffalo
      replicas: 1
    networks:
      - baidaohui-network

  # 电商API服务
  ecommerce-api-service:
    image: yourregistry/baidaohui-ecommerce-api-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGODB_URI=${MONGODB_URI}
      - R2_ENDPOINT=${R2_ENDPOINT}
      - R2_ACCESS_KEY=${R2_ACCESS_KEY}
      - R2_SECRET_KEY=${R2_SECRET_KEY}
      - R2_BUCKET=${R2_BUCKET}
      - JWT_SECRET=${JWT_SECRET}
    deploy:
      placement:
        constraints:
          - node.labels.location == buffalo
      replicas: 2
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 支付服务
  payment-service:
    image: yourregistry/baidaohui-payment-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGODB_URI=${MONGODB_URI}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - FORTUNE_SERVICE_URL=http://fortune-service:3003
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
      replicas: 2
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 邀请链接服务
  invite-service:
    image: yourregistry/baidaohui-invite-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3006
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
      replicas: 1
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 密钥管理服务
  key-service:
    image: yourregistry/baidaohui-key-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3007
      - MONGODB_URI=${MONGODB_URI}
      - VAULT_URL=${VAULT_URL}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
      replicas: 1
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    deploy:
      placement:
        constraints:
          - node.labels.location == san-jose
    networks:
      - baidaohui-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  baidaohui-network:
    driver: overlay
    attachable: true

volumes:
  redis-data:
    driver: local 
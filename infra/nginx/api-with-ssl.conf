# Nginx API配置文件 (带SSL支持)
# VPS后端服务反向代理配置

# HTTP 重定向到 HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name api.baidaohui.com;
    return 301 https://$server_name$request_uri;
}

# HTTPS 反代及安全头配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.baidaohui.com;

    # SSL 证书路径
    ssl_certificate     /etc/ssl/origin.pem;
    ssl_certificate_key /etc/ssl/origin-key.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # **安全头 - 必须在 server 块内部**
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=63072000" always;

    # **全局 CORS - 同样应在 server 或 location 内**
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept" always;
    add_header Access-Control-Allow-Credentials "false" always;
    add_header Access-Control-Max-Age "86400" always;

    # 处理预检请求 - 也放在 server 块内
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept";
        add_header Access-Control-Allow-Credentials "false";
        add_header Access-Control-Max-Age "86400";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }

    # 日志路径
    access_log /var/log/nginx/api.baidaohui.com.access.log;
    error_log  /var/log/nginx/api.baidaohui.com.error.log;

    
    # 速率限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req zone=api burst=20 nodelay;
    
    # 主要API服务（圣何塞VPS本地服务）
    
    # 认证服务
    location /auth/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://auth-service:5001/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # SSO服务
    location /sso/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://sso-service:5002/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 聊天服务
    location /chat/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://chat-service:5003/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 电商API服务
    location /ecommerce/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://ecommerce-api-service:5005/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 邀请服务
    location /invite/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://invite-service:5006/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 支付服务
    location /payment/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://payment-service:5008/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 密钥服务
    location /keys/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://key-service:5013/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 静态API服务
    location /static/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://static-api-service:5010/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # AI代理服务
    location /v1/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://ai-proxy-service:5012/v1/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 流式响应支持
        proxy_buffering off;
        proxy_cache off;
        
        # 增加超时时间（AI请求可能较慢）
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
    }
    
    location /models {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://ai-proxy-service:5012/models;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # AI代理服务健康检查
    location /v1/health {
        proxy_pass http://ai-proxy-service:5012/v1/health;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 专门服务（水牛城VPS - 跨VPS代理）
    
    # 算命服务
    location /fortune/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://216.144.233.104:5007/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 邮件服务
    location /email/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://216.144.233.104:5008/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # R2同步服务
    location /r2-sync/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://216.144.233.104:5011/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 健康检查接口
    location /health {
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"api-gateway-nginx","timestamp":"$time_iso8601","version":"1.0.0"}';
    }
    
    # 错误页面
    error_page 404 /404.json;
    location = /404.json {
        add_header Content-Type application/json;
        return 404 '{"error":"Not Found","message":"API endpoint not found","timestamp":"$time_iso8601"}';
    }
    
    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        add_header Content-Type application/json;
        return 500 '{"error":"Internal Server Error","message":"Service temporarily unavailable","timestamp":"$time_iso8601"}';
    }
} 